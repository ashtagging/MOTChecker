@page "/"
@using MOTChecker.Models
@using MOTChecker.Services
@using Newtonsoft.Json

@rendermode InteractiveServer
@inject IVehicleService VehicleService

<PageTitle>MOT Checker</PageTitle>

<div class="card">
    <div class="title-wrapper">
        <h1>MOT Checker</h1>
    </div>
    <EditForm Model="@vehicleDetails" OnValidSubmit="@HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="wrap">
            <div class="search-wrapper">
                <InputText class="search-bar" placeholder="Please Enter Your Registration" id="inputValue" @bind-Value="@registration" />
                <button type="submit" class="search-button">
                    <i class="fa fa-search"></i> Submit
                </button>
            </div>
        </div>
      
    </EditForm>
    @if (vehicleDetails != null)
    {
        <div class="card-text-wrapper">
            <div><strong>Registration: </strong> @vehicleDetails.Registration</div>
            <div><strong>Make: </strong> @vehicleDetails.Make</div>
            <div><strong>Model: </strong> @vehicleDetails.Model</div>
            <div><strong>Colour: </strong> @vehicleDetails.PrimaryColour</div>
            <div><strong>MOT Expiry Date: </strong> @vehicleDetails.MotTests?[0].ExpiryDate</div>
            <div><strong>Last Test Mileage: </strong>@vehicleDetails.MotTests?[0].OdometerValue</div>
        </div>
    }

</div>

@code {
    private VehicleDetails vehicleDetails = new VehicleDetails();
    private string registration = string.Empty;

    private async Task HandleSubmit()
    {
        vehicleDetails = await VehicleService.GetMotData(registration);
    }
}